<UserControl x:Class="FloodMonitor.Sensors"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FloodMonitor"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:viewModels="clr-namespace:FloodMonitor.ViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:converters="clr-namespace:FloodMonitor.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                          HorizontalContentAlignment="Stretch">
      <dragablz:DragablzItemsControl ItemsSource="{Binding Source={x:Static viewModels:Sensor.AllView}}"
                        Focusable="False"
                      Margin="77 40">
        <dragablz:DragablzItemsControl.Style>
          <Style TargetType="{x:Type dragablz:DragablzItemsControl}">
            <Setter Property="ItemsPanel">
              <Setter.Value>
                <ItemsPanelTemplate>
                  <Canvas IsItemsHost="True" />
                </ItemsPanelTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItemsControl}">
                  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"/>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </dragablz:DragablzItemsControl.Style>
        <dragablz:DragablzItemsControl.PositionMonitor>
          <dragablz:VerticalPositionMonitor OrderChanged="StackPositionMonitor_OnOrderChanged"/>
        </dragablz:DragablzItemsControl.PositionMonitor>
        <dragablz:DragablzItemsControl.ItemsOrganiser>
          <dragablz:VerticalOrganiser/>
        </dragablz:DragablzItemsControl.ItemsOrganiser>
        <dragablz:DragablzItemsControl.ItemContainerStyle>
          <Style TargetType="dragablz:DragablzItem">
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource AncestorType=Border},Path=ActualWidth}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <!-- here we create a custom item container, to animate a card popping out towards the user as it is dragged -->
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                  <ControlTemplate.Resources>
                    <SineEase x:Key="Ease" EasingMode="EaseInOut" />
                  </ControlTemplate.Resources>
                  <Grid RenderTransformOrigin=".5, .5" HorizontalAlignment="Stretch">
                    <materialDesign:Card Content="{TemplateBinding ContentControl.Content}"
                                     ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                     SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     x:Name="Card"
                                     materialDesign:ShadowAssist.ShadowDepth="Depth2" 
                                     Margin="20" 
                                     UniformCornerRadius="4"/>
                    <Grid.RenderTransform>
                      <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1" />
                    </Grid.RenderTransform>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsDragging" Value="True">
                      <Trigger.EnterActions>
                        <BeginStoryboard>
                          <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                              <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12" EasingFunction="{StaticResource Ease}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                              <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.12" EasingFunction="{StaticResource Ease}" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Card" Storyboard.TargetProperty="(materialDesign:ShadowAssist.ShadowDepth)">
                              <DiscreteObjectKeyFrame KeyTime="0:0:0.08" Value="{x:Static materialDesign:ShadowDepth.Depth2}" />
                              <DiscreteObjectKeyFrame KeyTime="0:0:0.12" Value="{x:Static materialDesign:ShadowDepth.Depth3}" />
                              <DiscreteObjectKeyFrame KeyTime="0:0:0.16" Value="{x:Static materialDesign:ShadowDepth.Depth4}" />
                            </ObjectAnimationUsingKeyFrames>
                          </Storyboard>
                        </BeginStoryboard>
                      </Trigger.EnterActions>
                      <Trigger.ExitActions>
                        <BeginStoryboard>
                          <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                              <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" EasingFunction="{StaticResource Ease}" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                              <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1" EasingFunction="{StaticResource Ease}" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Card" Storyboard.TargetProperty="(materialDesign:ShadowAssist.ShadowDepth)">
                              <DiscreteObjectKeyFrame KeyTime="0:0:0.12" Value="{x:Static materialDesign:ShadowDepth.Depth4}" />
                              <DiscreteObjectKeyFrame KeyTime="0:0:0.16" Value="{x:Static materialDesign:ShadowDepth.Depth3}" />
                              <DiscreteObjectKeyFrame KeyTime="0:0:0.22" Value="{x:Static materialDesign:ShadowDepth.Depth2}" />
                            </ObjectAnimationUsingKeyFrames>

                          </Storyboard>
                        </BeginStoryboard>
                      </Trigger.ExitActions>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </dragablz:DragablzItemsControl.ItemContainerStyle>
        <dragablz:DragablzItemsControl.ItemTemplate>
          <DataTemplate DataType="{x:Type viewModels:Sensor}">

            <Grid Height="174" HorizontalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" MinWidth="74"/>
              </Grid.ColumnDefinitions>

              <wpf:CartesianChart Margin="7 10 -27 0" Pan="X" Background="{x:Null}"
                                         Zoom="X" UseLayoutRounding="False"
                                         DisableAnimations="False">
                <wpf:CartesianChart.AxisY>
                  <wpf:Axis MaxValue="7" MinValue="-1">
                    <wpf:Axis.Separator>
                      <wpf:Separator Step="1" SnapsToDevicePixels="True"/>
                    </wpf:Axis.Separator>
                  </wpf:Axis>
                </wpf:CartesianChart.AxisY>
                <wpf:CartesianChart.AxisX>
                  <wpf:Axis LabelFormatter="{Binding LabelFormatter}"/>
                </wpf:CartesianChart.AxisX>
                <wpf:CartesianChart.Series>
                  <wpf:LineSeries Values="{Binding WaterLevels}" PointGeometry="{x:Null}" Title="LEVEL"
                                         LineSmoothness="0.7" SnapsToDevicePixels="True"/>
                </wpf:CartesianChart.Series>
              </wpf:CartesianChart>

              <Grid VerticalAlignment="Top"
                          IsHitTestVisible="False"
                          Grid.ColumnSpan="2"
                            Margin="47 10 0 0"
                              Grid.Column="0"
                          HorizontalAlignment="Left">
                <Rectangle Fill="{DynamicResource MaterialDesignPaper}" Opacity="0.7"/>
                <StackPanel Margin="0 4 4 4">
                  <TextBlock Text="{Binding SensorName}" Style="{DynamicResource MaterialDesignTitleTextBlock}"
                                     Margin="0 0 0 0"/>
                  <TextBlock Text="{Binding Location}" Opacity="0.7"/>
                </StackPanel>
              </Grid>

              <Grid HorizontalAlignment="Right"
                          Background="{DynamicResource MaterialDesignPaper}"
                           Grid.Column="0" Margin="0 4 4 0"
                           VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal"
                                  Opacity="{Binding RelativeSource={RelativeSource AncestorType={x:Type materialDesign:Card}},Path=IsMouseOver,Converter={converters:BooleanToObject 1, 0.2}}">
                  <Button Content="{materialDesign:PackIcon Pencil}" Command="{Binding EditCommand}"
                                ToolTip="Edit Sensor"
                                Style="{DynamicResource MaterialDesignToolButton}"/>
                  <Button Content="{materialDesign:PackIcon Delete}" Command="{Binding DeleteCommand}"
                                ToolTip="Delete Sensor"
                                Style="{DynamicResource MaterialDesignToolButton}"/>
                  <Button Content="{materialDesign:PackIcon Settings}" 
                                Command="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=ShowSensorSettingsCommand}"
                                CommandParameter="{Binding}"
                                ToolTip="Settings"
                                Style="{DynamicResource MaterialDesignToolButton}"/>
                </StackPanel>
              </Grid>

              <Slider HorizontalAlignment="Left" Grid.Column="0" 
                            ToolTip="Water Level Threshold"
                            Margin="4 10 0 30"
                            Value="{Binding WarningLevel}"
                            TickFrequency="1" IsSnapToTickEnabled="True"
                            Style="{DynamicResource MaterialDesignDiscreteSlider}"
                            Orientation="Vertical" Maximum="5" Minimum="0" TickPlacement="TopLeft">
                <Slider.Resources>
                  <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource ValidationErrorColor}"/>
                </Slider.Resources>
              </Slider>

              <Thumb  dragablz:DragablzItem.IsCustomThumb="True"
                             Opacity="{Binding RelativeSource={RelativeSource AncestorType={x:Type materialDesign:Card}},Path=IsMouseOver,Converter={converters:BooleanToObject 1,0.4}}"
                             Grid.Column="0" HorizontalAlignment="Left"
                             Cursor="ScrollNS"
                             Margin="10"
                              ToolTip="Drag to move up or down"
                             VerticalAlignment="Top">
                <Thumb.Template>
                  <ControlTemplate>
                    <Grid Background="Transparent" >
                      <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <materialDesign:PackIcon Kind="ChevronUpDown"/>
                      </StackPanel>
                    </Grid>
                  </ControlTemplate>
                </Thumb.Template>
              </Thumb>

              <Rectangle Width="1" Fill="{DynamicResource MaterialDesignDivider}"
                                 IsHitTestVisible="False"
                               HorizontalAlignment="Right"
                               Grid.Column="0"/>

              <Grid Grid.Column="1" IsHitTestVisible="False">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="WATER LEVEL" Margin="10" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding WaterLevel}"
                                 Visibility="{Binding IsWarning,Converter={converters:BooleanToVisibility Collapsed,Visible}}"
                                 Grid.Row="1"
                                 HorizontalAlignment="Center"
                                 Margin="20 10"
                                 FontSize="47pt" FontWeight="Bold"
                                 VerticalAlignment="Center"/>
                <TextBlock Text="{Binding WaterLevel}"
                                 Visibility="{Binding IsWarning,Converter={converters:BooleanToVisibility}}"
                                 Foreground="{DynamicResource ValidationErrorBrush}"
                                 Grid.Row="1"
                                 HorizontalAlignment="Center"
                                 Margin="20 10"
                                 FontSize="47pt" FontWeight="Bold"
                                 VerticalAlignment="Center"/>
                <TextBlock Text="{Binding LastHeartBeatText}" Margin="10" HorizontalAlignment="Center"
                                 Grid.Row="2"/>
              </Grid>
            </Grid>

          </DataTemplate>
        </dragablz:DragablzItemsControl.ItemTemplate>
      </dragablz:DragablzItemsControl>
    </ScrollViewer>

    <Button HorizontalAlignment="Right" VerticalAlignment="Bottom"
              Focusable="False"
              Style="{DynamicResource MaterialDesignFloatingActionButton}"
              Content="{materialDesign:PackIcon Plus}"
              Command="{Binding Source={x:Static viewModels:Sensor.AddCommand}}"
              Margin="20"/>
  </Grid>
</UserControl>
