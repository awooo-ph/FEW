<Window x:Class="FloodMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FloodMonitor"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        Icon="/icon2.ico"
        xmlns:lv="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:viewModels="clr-namespace:FloodMonitor.ViewModels"
        xmlns:converters="clr-namespace:FloodMonitor.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
        WindowStartupLocation="CenterScreen"
        Title="Flood Warning System" MinHeight="444" MinWidth="777">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/themes/MaterialDesignTheme.Button.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>
  <md:DialogHost Identifier="Login" CloseOnClickAway="False" DialogTheme="Light"
                 IsOpen="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=ShowLogin}">
    <md:DialogHost.DialogContent>
      <local:LoginView/>
    </md:DialogHost.DialogContent>
    <Grid>
    <md:DialogHost Identifier="Root">
      <md:DrawerHost IsRightDrawerOpen="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=ShowSensorSettings}">
        <md:DrawerHost.RightDrawerContent>
          <local:SensorSettings/>
        </md:DrawerHost.RightDrawerContent>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="333"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>

          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <Image Source="/logo.png" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality"
           VerticalAlignment="Center" HorizontalAlignment="Center"
           Margin="14 4" />
          <Rectangle Height="1" Fill="{DynamicResource MaterialDesignDivider}" VerticalAlignment="Bottom"
               SnapsToDevicePixels="True"
               UseLayoutRounding="True"/>

          <!--Sidebar-->
          <local:LeftContent Grid.Row="1" Grid.Column="0"/>

          <Image IsHitTestVisible="False" Source="/shadow-divider_2.png" RenderTransformOrigin="0.5 0.5"
             Grid.Row="0" Grid.RowSpan="2"
             Grid.Column="1" HorizontalAlignment="Left"
             Stretch="Uniform">
            <Image.RenderTransform>
              <ScaleTransform ScaleX="-1"/>
            </Image.RenderTransform>
          </Image>

          <!-- Sensors -->
          <Rectangle Fill="{DynamicResource MaterialDesignDivider}" Opacity="0.4"
                     Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"/>

            <local:Sensors Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                Visibility="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=ShowSensors,Converter={converters:BooleanToVisibility}}"/>

          <local:Residents Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                         Visibility="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=ShowResidents,Converter={converters:BooleanToVisibility}}"/>
          <local:Users Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                           Visibility="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=ShowUsers,Converter={converters:BooleanToVisibility}}"/>
          <local:SettingsView Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                              IsEnabled="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=CurrentUser.IsAdmin}"
                       Visibility="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=ShowSettings,Converter={converters:BooleanToVisibility}}"/>


            <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center"
                         DataContext="{Binding Source={x:Static viewModels:MainViewModel.Instance}}">
              <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                           Content="SENSORS" IsChecked="{Binding ShowSensors}"/>
              <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                           Content="RESIDENTS" IsChecked="{Binding ShowResidents}"/>
              <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                           Content="USERS" IsChecked="{Binding ShowUsers}"/>
              <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                           IsEnabled="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=CurrentUser.IsAdmin}"
                           Content="SETTINGS" IsChecked="{Binding ShowSettings}"/>
            </StackPanel>


            <Menu Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top"
                Margin="10"
                        DataContext="{Binding Source={x:Static viewModels:MainViewModel.Instance}}">
              <MenuItem Header="{Binding CurrentUser.Username}">
                <MenuItem Header="_Reset Password" Command="{Binding ResetPasswordCommand}"/>
                <MenuItem Header="_Logout" Command="{Binding LogoutCommand}"/>
              </MenuItem>
            </Menu>
          
        </Grid>
      </md:DrawerHost>
    </md:DialogHost>

    <md:Snackbar VerticalAlignment="Bottom" HorizontalAlignment="Center"
                 MessageQueue="{Binding Source={x:Static viewModels:MainViewModel.Instance},Path=MessageQueue}"/>
  </Grid>
  </md:DialogHost>
</Window>
